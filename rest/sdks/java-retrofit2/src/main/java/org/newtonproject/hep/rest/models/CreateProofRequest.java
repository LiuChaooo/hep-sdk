/*
 * HEP REST API
 * The REST API for HEP protocol
 *
 * OpenAPI spec version: v1
 * Contact: xiawu@zeuux.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.newtonproject.hep.rest.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.newtonproject.hep.rest.models.Proof;

/**
 * CreateProofRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-05T19:42:46.441+08:00")
public class CreateProofRequest {
  @SerializedName("dapp_key")
  private String dappKey = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("ts")
  private Integer ts = null;

  @SerializedName("nonce")
  private String nonce = null;

  @SerializedName("os")
  private String os = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("dapp_signature_method")
  private String dappSignatureMethod = null;

  @SerializedName("dapp_signature")
  private String dappSignature = null;

  @SerializedName("sign_type")
  private String signType = null;

  @SerializedName("signature")
  private String signature = null;

  @SerializedName("action")
  private String action = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("dapp_id")
  private String dappId = null;

  @SerializedName("content")
  private Proof content = null;

  public CreateProofRequest dappKey(String dappKey) {
    this.dappKey = dappKey;
    return this;
  }

   /**
   * The decentralized application access key
   * @return dappKey
  **/
  @ApiModelProperty(required = true, value = "The decentralized application access key")
  public String getDappKey() {
    return dappKey;
  }

  public void setDappKey(String dappKey) {
    this.dappKey = dappKey;
  }

  public CreateProofRequest protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * The protocol name. default is &#39;HEP&#39;.
   * @return protocol
  **/
  @ApiModelProperty(required = true, value = "The protocol name. default is 'HEP'.")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public CreateProofRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The protocol version such as &#39;1.0&#39;
   * @return version
  **/
  @ApiModelProperty(required = true, value = "The protocol version such as '1.0'")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public CreateProofRequest ts(Integer ts) {
    this.ts = ts;
    return this;
  }

   /**
   * The current timestamp
   * @return ts
  **/
  @ApiModelProperty(required = true, value = "The current timestamp")
  public Integer getTs() {
    return ts;
  }

  public void setTs(Integer ts) {
    this.ts = ts;
  }

  public CreateProofRequest nonce(String nonce) {
    this.nonce = nonce;
    return this;
  }

   /**
   * The random string or auto-increment sequence
   * @return nonce
  **/
  @ApiModelProperty(required = true, value = "The random string or auto-increment sequence")
  public String getNonce() {
    return nonce;
  }

  public void setNonce(String nonce) {
    this.nonce = nonce;
  }

  public CreateProofRequest os(String os) {
    this.os = os;
    return this;
  }

   /**
   * The operating system of client such as ios, android, dweb,etc.
   * @return os
  **/
  @ApiModelProperty(required = true, value = "The operating system of client such as ios, android, dweb,etc.")
  public String getOs() {
    return os;
  }

  public void setOs(String os) {
    this.os = os;
  }

  public CreateProofRequest language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The i18n language code such as zh, en, etc.
   * @return language
  **/
  @ApiModelProperty(required = true, value = "The i18n language code such as zh, en, etc.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public CreateProofRequest dappSignatureMethod(String dappSignatureMethod) {
    this.dappSignatureMethod = dappSignatureMethod;
    return this;
  }

   /**
   * The signature method used by dapp.
   * @return dappSignatureMethod
  **/
  @ApiModelProperty(required = true, value = "The signature method used by dapp.")
  public String getDappSignatureMethod() {
    return dappSignatureMethod;
  }

  public void setDappSignatureMethod(String dappSignatureMethod) {
    this.dappSignatureMethod = dappSignatureMethod;
  }

  public CreateProofRequest dappSignature(String dappSignature) {
    this.dappSignature = dappSignature;
    return this;
  }

   /**
   * The signature generated by dapp.
   * @return dappSignature
  **/
  @ApiModelProperty(required = true, value = "The signature generated by dapp.")
  public String getDappSignature() {
    return dappSignature;
  }

  public void setDappSignature(String dappSignature) {
    this.dappSignature = dappSignature;
  }

  public CreateProofRequest signType(String signType) {
    this.signType = signType;
    return this;
  }

   /**
   * The signature Type,aka cryptographic algorithm.
   * @return signType
  **/
  @ApiModelProperty(required = true, value = "The signature Type,aka cryptographic algorithm.")
  public String getSignType() {
    return signType;
  }

  public void setSignType(String signType) {
    this.signType = signType;
  }

  public CreateProofRequest signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * The signature hex string by application owner. The exclude fields is [sign_type, signature, md5].
   * @return signature
  **/
  @ApiModelProperty(required = true, value = "The signature hex string by application owner. The exclude fields is [sign_type, signature, md5].")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }

  public CreateProofRequest action(String action) {
    this.action = action;
    return this;
  }

   /**
   * The action name which value is &#39;hep.proof.submit&#39;.
   * @return action
  **/
  @ApiModelProperty(required = true, value = "The action name which value is 'hep.proof.submit'.")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public CreateProofRequest uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * The request uuid
   * @return uuid
  **/
  @ApiModelProperty(required = true, value = "The request uuid")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public CreateProofRequest dappId(String dappId) {
    this.dappId = dappId;
    return this;
  }

   /**
   * The decentralized application ID
   * @return dappId
  **/
  @ApiModelProperty(required = true, value = "The decentralized application ID")
  public String getDappId() {
    return dappId;
  }

  public void setDappId(String dappId) {
    this.dappId = dappId;
  }

  public CreateProofRequest content(Proof content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @ApiModelProperty(required = true, value = "")
  public Proof getContent() {
    return content;
  }

  public void setContent(Proof content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateProofRequest createProofRequest = (CreateProofRequest) o;
    return Objects.equals(this.dappKey, createProofRequest.dappKey) &&
        Objects.equals(this.protocol, createProofRequest.protocol) &&
        Objects.equals(this.version, createProofRequest.version) &&
        Objects.equals(this.ts, createProofRequest.ts) &&
        Objects.equals(this.nonce, createProofRequest.nonce) &&
        Objects.equals(this.os, createProofRequest.os) &&
        Objects.equals(this.language, createProofRequest.language) &&
        Objects.equals(this.dappSignatureMethod, createProofRequest.dappSignatureMethod) &&
        Objects.equals(this.dappSignature, createProofRequest.dappSignature) &&
        Objects.equals(this.signType, createProofRequest.signType) &&
        Objects.equals(this.signature, createProofRequest.signature) &&
        Objects.equals(this.action, createProofRequest.action) &&
        Objects.equals(this.uuid, createProofRequest.uuid) &&
        Objects.equals(this.dappId, createProofRequest.dappId) &&
        Objects.equals(this.content, createProofRequest.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dappKey, protocol, version, ts, nonce, os, language, dappSignatureMethod, dappSignature, signType, signature, action, uuid, dappId, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateProofRequest {\n");
    
    sb.append("    dappKey: ").append(toIndentedString(dappKey)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    dappSignatureMethod: ").append(toIndentedString(dappSignatureMethod)).append("\n");
    sb.append("    dappSignature: ").append(toIndentedString(dappSignature)).append("\n");
    sb.append("    signType: ").append(toIndentedString(signType)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    dappId: ").append(toIndentedString(dappId)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

