/*
 * HEP REST API
 * The REST API for HEP protocol
 *
 * OpenAPI spec version: v1
 * Contact: xiawu@zeuux.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.newtonproject.hep.rest.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.newtonproject.hep.rest.models.Order;

/**
 * Proof
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-05T19:42:46.441+08:00")
public class Proof {
  @SerializedName("proof_type")
  private String proofType = null;

  @SerializedName("price_currency")
  private String priceCurrency = null;

  @SerializedName("total_price")
  private String totalPrice = null;

  @SerializedName("submitter")
  private String submitter = null;

  @SerializedName("orders")
  private List<Order> orders = new ArrayList<Order>();

  public Proof proofType(String proofType) {
    this.proofType = proofType;
    return this;
  }

   /**
   * The proof type which value is &#39;order&#39;.
   * @return proofType
  **/
  @ApiModelProperty(required = true, value = "The proof type which value is 'order'.")
  public String getProofType() {
    return proofType;
  }

  public void setProofType(String proofType) {
    this.proofType = proofType;
  }

  public Proof priceCurrency(String priceCurrency) {
    this.priceCurrency = priceCurrency;
    return this;
  }

   /**
   * The symbol of fiat or digital token, such as USD, RMB, NEW,BTC,ETH.
   * @return priceCurrency
  **/
  @ApiModelProperty(required = true, value = "The symbol of fiat or digital token, such as USD, RMB, NEW,BTC,ETH.")
  public String getPriceCurrency() {
    return priceCurrency;
  }

  public void setPriceCurrency(String priceCurrency) {
    this.priceCurrency = priceCurrency;
  }

  public Proof totalPrice(String totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * The amount of fiat or digital token, unit is the minimum unit of given fiat or digital token.
   * @return totalPrice
  **/
  @ApiModelProperty(required = true, value = "The amount of fiat or digital token, unit is the minimum unit of given fiat or digital token.")
  public String getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(String totalPrice) {
    this.totalPrice = totalPrice;
  }

  public Proof submitter(String submitter) {
    this.submitter = submitter;
    return this;
  }

   /**
   * The submitter&#39;s NewID
   * @return submitter
  **/
  @ApiModelProperty(required = true, value = "The submitter's NewID")
  public String getSubmitter() {
    return submitter;
  }

  public void setSubmitter(String submitter) {
    this.submitter = submitter;
  }

  public Proof orders(List<Order> orders) {
    this.orders = orders;
    return this;
  }

  public Proof addOrdersItem(Order ordersItem) {
    this.orders.add(ordersItem);
    return this;
  }

   /**
   * Get orders
   * @return orders
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Order> getOrders() {
    return orders;
  }

  public void setOrders(List<Order> orders) {
    this.orders = orders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Proof proof = (Proof) o;
    return Objects.equals(this.proofType, proof.proofType) &&
        Objects.equals(this.priceCurrency, proof.priceCurrency) &&
        Objects.equals(this.totalPrice, proof.totalPrice) &&
        Objects.equals(this.submitter, proof.submitter) &&
        Objects.equals(this.orders, proof.orders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(proofType, priceCurrency, totalPrice, submitter, orders);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Proof {\n");
    
    sb.append("    proofType: ").append(toIndentedString(proofType)).append("\n");
    sb.append("    priceCurrency: ").append(toIndentedString(priceCurrency)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    submitter: ").append(toIndentedString(submitter)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

