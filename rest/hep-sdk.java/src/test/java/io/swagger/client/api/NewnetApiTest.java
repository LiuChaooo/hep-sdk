/*
 * HEP REST API
 * The REST API for HEP protocol
 *
 * OpenAPI spec version: v1
 * Contact: xiawu@zeuux.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AuthCacheRequest;
import io.swagger.client.model.AuthCacheResponse;
import io.swagger.client.model.CreateAuthCacheResponse;
import io.swagger.client.model.CreatePayCacheResponse;
import io.swagger.client.model.PayCacheRequest;
import io.swagger.client.model.PayCacheResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NewnetApi
 */
@Ignore
public class NewnetApiTest {

    private final NewnetApi api = new NewnetApi();

    /**
     * 
     *
     * Caches the authentication request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newnetCachesAuthCreateTest() throws ApiException {
        AuthCacheRequest body = null;
        CreateAuthCacheResponse response = api.newnetCachesAuthCreate(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get the authentication information by given request hash.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newnetCachesAuthReadTest() throws ApiException {
        String authHash = null;
        String dappKey = null;
        String protocol = null;
        String version = null;
        Integer ts = null;
        String nonce = null;
        String os = null;
        String language = null;
        String md5 = null;
        AuthCacheResponse response = api.newnetCachesAuthRead(authHash, dappKey, protocol, version, ts, nonce, os, language, md5);

        // TODO: test validations
    }
    /**
     * 
     *
     * Cache the pay request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newnetCachesPayCreateTest() throws ApiException {
        PayCacheRequest body = null;
        CreatePayCacheResponse response = api.newnetCachesPayCreate(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve the pay information by given pay hash.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newnetCachesPayReadTest() throws ApiException {
        String payHash = null;
        String dappKey = null;
        String protocol = null;
        String version = null;
        Integer ts = null;
        String nonce = null;
        String os = null;
        String language = null;
        String md5 = null;
        PayCacheResponse response = api.newnetCachesPayRead(payHash, dappKey, protocol, version, ts, nonce, os, language, md5);

        // TODO: test validations
    }
}
